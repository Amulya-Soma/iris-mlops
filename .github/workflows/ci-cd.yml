on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r src/docker/requirements.txt
          pip install flake8 pytest

      - name: Lint with flake8 (fatal errors only)
        run: |
          flake8 src --count --select=E9,F63,F7,F82 --show-source --statistics

      - name: Lint with flake8 (style)
        run: |
          flake8 src --count --statistics

      - name: Run tests (pytest if tests/ exists)
        run: |
          if [ -d "tests" ]; then pytest -q; else echo "No tests directory, skipping"; fi

      - name: Decide if Docker push is enabled
        id: gate
        shell: bash
        run: |
          if [ -n "${{ secrets.DOCKER_USERNAME }}" ] && [ -n "${{ secrets.DOCKER_PASSWORD }}" ]; then
            echo "push_enabled=true" >> "$GITHUB_OUTPUT"
          else
            echo "push_enabled=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Build Docker image
        run: |
          IMAGE_USER="${{ secrets.DOCKER_USERNAME }}"
          if [ -z "$IMAGE_USER" ]; then IMAGE_USER="local"; fi
          IMAGE_NAME="$IMAGE_USER/iris-api"
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV
          docker build -t "$IMAGE_NAME:latest" -f src/docker/Dockerfile .

      - name: Log in to Docker Hub
        if: ${{ github.ref == 'refs/heads/main' && steps.gate.outputs.push_enabled == 'true' }}
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image (main only)
        if: ${{ github.ref == 'refs/heads/main' && steps.gate.outputs.push_enabled == 'true' }}
        run: |
          docker push "$IMAGE_NAME:latest"

      - name: Make deploy script executable (if present)
        run: |
          if [ -f "src/docker/deploy.sh" ]; then chmod +x src/docker/deploy.sh; fi

      - name: Run deploy script (main only, if present)
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          if [ -f "src/docker/deploy.sh" ]; then ./src/docker/deploy.sh; else echo "No deploy.sh found, skipping"; fi
